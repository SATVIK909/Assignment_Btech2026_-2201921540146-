class Solution {
public:
    int compareVersion(string version1, string version2) {
        int i = 0;
        int j = 0;
        long long n = version1.size();
        long long m = version2.size();
        long long v1 = 0;
        long long v2 = 0;
        while (i<n && j<m){
            while (i<n && version1[i]!='.'){
                v1+=10*v1+(version1[i]-'0');
                i++;
            }
            while (j<m && version2[j]!='.'){
                v2+=10*v2+(version2[j]-'0');
                j++;
            }
            if (v1>v2){
                return 1;
                
            }else if (v1<v2){
                return -1;
            }
            i++;
            j++;
            v1=0;
            v2=0;
        }
        cout<<j<<" "<<i<<endl;
        if (j>=m && i!=n){
            while (i<n){
                if (version1[i]!='.' && version1[i]!='0'){
                    return 1;
                }
                i++;
            }
        }
        if (j!=m && i>=n){
            while (j<m){
                if (version2[j]!='.' && version2[j]!='0'){
                    return -1;
                }
                j++;
            }
        }
        return 0;
    }
};
